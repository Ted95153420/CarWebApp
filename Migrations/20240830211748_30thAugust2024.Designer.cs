// <auto-generated />
using System;
using CarPriceComparison.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarPriceComparison.Migrations
{
    [DbContext(typeof(VehicleContext))]
    [Migration("20240830211748_30thAugust2024")]
    partial class _30thAugust2024
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarPriceComparison.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryForeignKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryForeignKey");

                    b.ToTable("City");
                });

            modelBuilder.Entity("CarPriceComparison.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("CarPriceComparison.Models.Dealer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("DealerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityForeignKey");

                    b.ToTable("Dealer");
                });

            modelBuilder.Entity("CarPriceComparison.Models.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehiclePictures");
                });

            modelBuilder.Entity("CarPriceComparison.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("CityFuelEconomy")
                        .HasColumnType("real");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("HighwayFuelEconomy")
                        .HasColumnType("real");

                    b.Property<float>("ListPrice")
                        .HasColumnType("real");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SoldPrice")
                        .HasColumnType("real");

                    b.Property<int?>("VehicleDealerId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleDealerId");

                    b.HasIndex("VehicleModelId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("CarPriceComparison.Models.VehicleMakes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleMakes");
                });

            modelBuilder.Entity("CarPriceComparison.Models.VehicleModels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleMakeForeignKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleMakeForeignKey");

                    b.ToTable("VehicleModels");
                });

            modelBuilder.Entity("CarPriceComparison.Models.City", b =>
                {
                    b.HasOne("CarPriceComparison.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CarPriceComparison.Models.Dealer", b =>
                {
                    b.HasOne("CarPriceComparison.Models.City", "City")
                        .WithMany("Dealerships")
                        .HasForeignKey("CityForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CarPriceComparison.Models.Picture", b =>
                {
                    b.HasOne("CarPriceComparison.Models.Vehicle", "VehicleForeignKey")
                        .WithMany("Pictures")
                        .HasForeignKey("VehicleId");

                    b.Navigation("VehicleForeignKey");
                });

            modelBuilder.Entity("CarPriceComparison.Models.Vehicle", b =>
                {
                    b.HasOne("CarPriceComparison.Models.Dealer", "DealerForeignKey")
                        .WithMany("Vehicle")
                        .HasForeignKey("VehicleDealerId");

                    b.HasOne("CarPriceComparison.Models.VehicleModels", "ModelForeignKey")
                        .WithMany()
                        .HasForeignKey("VehicleModelId");

                    b.Navigation("DealerForeignKey");

                    b.Navigation("ModelForeignKey");
                });

            modelBuilder.Entity("CarPriceComparison.Models.VehicleModels", b =>
                {
                    b.HasOne("CarPriceComparison.Models.VehicleMakes", "Make")
                        .WithMany("Models")
                        .HasForeignKey("VehicleMakeForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Make");
                });

            modelBuilder.Entity("CarPriceComparison.Models.City", b =>
                {
                    b.Navigation("Dealerships");
                });

            modelBuilder.Entity("CarPriceComparison.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("CarPriceComparison.Models.Dealer", b =>
                {
                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("CarPriceComparison.Models.Vehicle", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("CarPriceComparison.Models.VehicleMakes", b =>
                {
                    b.Navigation("Models");
                });
#pragma warning restore 612, 618
        }
    }
}
