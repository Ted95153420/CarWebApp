# Use the official Microsoft SQL Server image as a parent image
FROM mcr.microsoft.com/mssql/server

USER root

# Install the .NET SDK
RUN apt-get update && \
    apt-get install -y wget && \
    wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb -O packages-microsoft-prod.deb && \
    dpkg -i packages-microsoft-prod.deb && \
    apt-get update && \
    apt-get install -y apt-transport-https && \
    apt-get update && \
    apt-get install -y dotnet-sdk-8.0

# Install dotnet-ef tool and check for errors
RUN dotnet tool install --global dotnet-ef; if [ $? -ne 0 ]; then echo "dotnet-ef installation failed"; exit 1; fi

# Verify dotnet-ef installation
RUN dotnet ef --version || echo "dotnet-ef installation failed"

# Add dotnet-ef to PATH
ENV PATH="$PATH:/root/.dotnet/tools"
RUN echo $PATH

# Verify .NET SDK installation
RUN dotnet --list-sdks

# Update package index before installing
RUN apt-get clean && \
    apt-get update --fix-missing && \
    apt-get install -y --allow-unauthenticated && \
    apt-get install -y --fix-broken

# Install required Perl module for msodbcsql17
RUN apt-get install -y libreadline-dev

# Accept license terms and install msodbcsql17 and mssql-tools
ENV ACCEPT_EULA=y
RUN apt-get update && \
    apt-get install -y --fix-broken msodbcsql17 && \
    apt-get install -y --allow-unauthenticated mssql-tools

# Add sqlcmd to PATH
ENV PATH="$PATH:/opt/mssql-tools/bin/"

# Change permissions of the /home/mssql directory
RUN mkdir -p /home/mssql && chown -R mssql:mssql /home/mssql

# Copy the setup script and entrypoint script
COPY setup.sql /usr/src/app/setup.sql
COPY entrypoint.sh /usr/src/app/entrypoint.sh

# Change ownership of the entrypoint script
RUN chown mssql:mssql /usr/src/app/entrypoint.sh

# Copy the csproj file
COPY . /usr/src/app
RUN chmod +x /usr/src/app/entrypoint.sh

# Switch back to the default user
USER mssql

# Set the entry point
ENTRYPOINT ["bin/bash", "/usr/src/app/entrypoint.sh"]

