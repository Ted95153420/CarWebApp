Chapter5 goals...

USING LAYOUTS and Hooking up to an API

Talk about what you get for 'free' when you create a new MVC project specifically
_ViewStart.cshtml which specifies the layout file for all of the website.
_Layout.cshtml for the general stuff and use of @RenderBody as a 'place holder' so content
can be 'injected'

23rd October 2018
   Refactored _Layout.cshtml - no longer boiler plate that comes with project but contains the general 
   layout for this web application. (basically moced the header and footer out of Index.cshtml and placed in 
   _Layout.cshtml, then added an @RenderBody to _Layout.cshtml so it 'knows' where to render page specific
   content)

28th October 2018
    Added Contact Page - site.js is not loading and therefore not changing the welcome message. Fix these
    reference errors before continuing!

31stOctober 2018 - hint of a clue. site.js is now loading. I changed the reference in index.cshtml
    from    : <script type="text/javascript" src="~wwwroot/js/site.js">
    to      : <script type="text/javascript" src="~/js/site.js">

    and this worked just fine, trouble is, dosen/t work when I use the ~/path... in the _Layout page.
    MIGHT be that I dont have a 'Development' environment set up. explore this but dont waste too much time....

2nd November 2018
    Above comment (from 31st November) not valid. It was nothing to do with the Development environment
    It was due to the fact I didnt have bower set up properly. A quick read of 
    https://www.loginradius.com/engineering/how-to-use-bower-to-install-bootstrap/ solved the problem for me.
    SANITY CHECK :-
    -demonstrate the fact you can delete from wwwroot/lib, then just do a restore using bower install
    after doing the above, I'd expect 'bootstrap' 'jQuery' and 'underscore' folders underneath the lib folder.
    does this happen? If so why? (when i type the 'bower list' command, there is no mention of jQuery)

2nd November 2018
    Worth a mention that I used Tag helpers in the links (in _Layout.cshtml)
    <a asp-controller="home" asp-action="Index">Home</a>
    <a asp-controller="home" asp-action="Contact">Contact</a>
    thats it! no further action required - (project.assets.json already has the correct dependency
    added - obj\Microsoft.AspNetCore.Mvc.TagHelpers and is already included in _ViewImports.cshtml)

    specifying the controller and action is better than hard coding link in. There may be logic in the 
    action method that changes the URL of page that is displayed for example.... 

    Random Question : WHY do I need script tags on both index.cshtml and Contact.cshtml? Why cant I have it in 
    the _Layout.cs.html - needed so display name propery i.e Welcome Ted! NOT Welcome NOT SET BY JAVASCRIPT

3rd November 2018
    Bound the ContactViewModel to Contact.cshtml using the follosing line in Contact.cshtml :-
    @model CarPriceComparison.ViewModels.ContactViewModel
    also, note that the fields in the view now use the attribute/tag helper 'asp-for', which basically
    specifies what field to map to in the ViewModel 

    PLURALSIGHT - half way through 'Using Validation' lesson
    added validation to the view model. Success (see attributes in model)
    PROB : trying to add reference to package 'jquery-validation-unobtrusive' in Contact.cshtml
        No.js file like in Wildermuths video??? 
